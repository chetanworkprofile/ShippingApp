@page "/tracking"
@page "/tracking/{Id}"

@attribute [Authorize(Roles = "client,admin,deliveryBoy")]
<PageTitle>Shipment App</PageTitle>

<h3>shipmentId @shipmentId</h3>
<AuthorizeView>
    <Authorized Context="auth">
        @*<table class="table">
            <thead>
                <tr>
                    <th> </th>
                    <th>Status</th>
                    <th>Current Location</th>
                    <th>Date</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var status in list)
                {
                    <tr>
                        <td>
                            <i class="oi oi-location"></i>
                        </td>
                        <td>@status.shipmentStatus</td>
                        <td>@status.currentLocation</td>
                        <td>@status.lastUpdated</td>
                    </tr>
                }
            </tbody>
        </table>*@
        
        <MudTable Items="@list" Hover="true" Loading="@loading" FixedHeader="true"  Height="400px">
            <HeaderContent>
                <MudTh></MudTh>
                <MudTh>Status</MudTh>
                <MudTh>Current Location</MudTh>
                <MudTh>Date</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel=""><i class="oi oi-location"></i></MudTd>
                <MudTd DataLabel="Status">@context.shipmentStatus</MudTd>
                <MudTd DataLabel="Current Location">@context.currentLocation</MudTd>
                <MudTd DataLabel="Date">@context.lastUpdated</MudTd>
            </RowTemplate>
            @*<PagerContent>
                <MudTablePager PageSizeOptions="new int[]{50, 100}" />
            </PagerContent>*@
        </MudTable>
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized</p>
        @if (true)
        {
            _navMgr.NavigateTo("/login");
        }
    </NotAuthorized>
</AuthorizeView>


@code {

    [Parameter]
    public string? Id { get; set; }
    Guid shipmentId;
    private bool loading = true;
    protected override async void OnParametersSet()
    {
        if (Id != null)
        {
            shipmentId = new Guid(Id);
            Console.WriteLine(shipmentId);
            res = await _apiService.GetShipmentHistory(shipmentId);
            list = res.data;
            loading = false;
        }
        else
        {
            shipmentId = Guid.Empty;
        }
        StateHasChanged();
    }
    
    public Models.ShipmentHistory res = new();
    List<ShipmentStatusModel> list = new();
    
}
