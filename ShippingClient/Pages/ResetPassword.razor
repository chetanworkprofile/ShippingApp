@page "/resetPassword"
@using ShippingClient.Models;
@using ShippingClient.Services.Contracts;
@inject IAuthenticationService _authService;
@inject NavigationManager _navMgr;
@inject IAlertService AlertService

<div class="card col-sm-6" style="margin: 10% auto; justify-content:center">
    <h4 class="card-header">Reset Password</h4>
    <div class="card-body">
        <EditForm  OnSubmit="DoReset">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="otp">OTP</label>
               <InputNumber class="form-control" @bind-Value="resetResponse.statusCode"/>
               <ValidationMessage For="@(()=>resetResponse.statusCode)"/>
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.password" />
                <ValidationMessage For="@(()=>loginModel.password)" />
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <InputText id="confirmPassword" type="Password" class="form-control" @bind-Value="confirmPassword" />
                <ValidationMessage For="@(()=> (confirmPassword == this.password))" />
            </div>

            <div class="my-2">
                @resetResponse.message
            </div>

            <div class="my-2">
                <button disabled="@loading" type="submit" class="btn btn-primary">
                    @if (loading)
                    {
                                <span class="spinner-border spinner-border-sm mr-1"></span>
                        Task.Delay(5000);
                        loading = false;
                    }
                    Send OTP
                </button>
            </div>
            <p>Don't have a account?</p><NavLink href="/register" class="btn btn-link">Register</NavLink>
            <NavLink href="/login" class="btn btn-link"></NavLink>
        </EditForm>
        <p>Please enter OTP that you received on your e-mail</p>
    </div>
</div>


@code {
    LoginDTO loginModel = new();
    LoginResponse resetResponse = new();
    public int otp = 0;
    string confirmPassword = string.Empty;
    public string password = string.Empty;

    private bool loading;

    async Task DoReset()
    {
        otp = resetResponse.statusCode;
        password = loginModel.password;
        ResetPasswordModel resetDTO = new ResetPasswordModel(otp, password);

        // reset alerts on submit
        AlertService.Clear();
        loading = true;
        try
        {
            resetResponse.message = "Wait....";
            if (confirmPassword != resetDTO.password)
            {
                resetResponse.message = "Password and Confirm Password does not match...";
                loading = false;
                return;
            }
            resetResponse = await _authService.ResetPassword(resetDTO);
            if (resetResponse.statusCode == 1)
            {
                AlertService.Success("Password reset successful", keepAfterRouteChange: true);
                _navMgr.NavigateTo("/");
            }
        }
        catch (Exception ex)
        {
            AlertService.Error(ex.Message);
            loading = false;
            StateHasChanged();
        }
    }
}