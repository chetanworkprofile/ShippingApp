@page "/getDriverShipments"

@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize(Roles = "deliveryBoy,admin")]
<PageTitle>Shipment App</PageTitle>

<AuthorizeView>
    <Authorized>
        <div class="row">
            <div class="col-md-6">
                <h3>Shipment History</h3>
                @*<input type="text" class="form-control" placeholder="search by name" @bind="searchString" @bind:event="oninput" @onkeyup="async ()=>await Search()" />*@
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>S.No</th>
                            <th>shipmentId</th>
                            <th>Product Type</th>
                            <th>Container Type</th>
                            <th>Shipment Weight</th>
                            <th>Is Accepted</th>
                            <th>Is Active</th>
                            <th>Available Location</th>
                            <th>Next Location</th>
                        </tr>
                    </thead>
                    @if (shipments != null && shipments.Count > 0)
                    {
                        @foreach (var shipment in shipments)
                        {
                            <tbody>
                                <tr>
                                    <td>@(sno++)</td>
                                    <td>@shipment.shipmentId</td>
                                    <td>@shipment.productType</td>
                                    <td>@shipment.containerType</td>
                                    <td>@shipment.shipmentWeight</td>
                                    <td>@shipment.isAccepted</td>
                                    <td>@shipment.isActive</td>
                                    <td>@shipment.checkpoint1Id</td>
                                    <td>@shipment.checkpoint2Id</td>
                                    
                                </tr>
                            </tbody>
                        }
                    }
                    else
                    {
                        <p><em>No Record found</em></p>
                    }
                </table>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized</p>
        @if (true)
        {
            _navMgr.NavigateTo("/login");
        }
    </NotAuthorized>
</AuthorizeView>


@code {
    List<AvailableShipmentsDriver> shipments = new();
    //List<GetShipmentsConverted> shipmentListConverted = new();
    public int sno = 1;

    protected override async Task OnInitializedAsync()
    {
        await GetShipmentsTypesList();
        //StateHasChanged();
        sno = 1;
    }



    async Task GetShipmentsTypesList()
    {
        // reset alerts on submit
        //AlertService.Clear();

        try
        {
            //GetYourselfResponse temp = await _apiService.GetYourself();
            //Guid tempId = temp.data.userId;
            shipments = await _apiService.GetShipmentHistoryDriver();
            sno = 1;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            //AlertService.Error(ex.Message);
            StateHasChanged();
        }
    }
}
